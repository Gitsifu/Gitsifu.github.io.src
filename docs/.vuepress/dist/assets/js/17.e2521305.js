(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{452:function(t,n,e){"use strict";e.r(n);var r=e(11),o=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("blockquote",[e("p",[t._v("以下代码实现只配置部分功能，更多功能扩展请查阅"),e("a",{attrs:{href:"http://www.wangeditor.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("wangeditor官网"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"一、下载依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、下载依赖"}},[t._v("#")]),t._v(" 一、下载依赖")]),t._v(" "),e("p",[e("strong",[t._v("注意wangeditor全部是小写")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install wangeditor --save\n")])])]),e("h2",{attrs:{id:"二、实现过程中遇到的坑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、实现过程中遇到的坑"}},[t._v("#")]),t._v(" 二、实现过程中遇到的坑")]),t._v(" "),e("p",[t._v("1、当一个页面中使用到多个富文本组件时，会导致组件之间的"),e("code",[t._v("id")]),t._v("或者"),e("code",[t._v("ref")]),t._v("重复，导致渲染错误。")]),t._v(" "),e("p",[e("strong",[t._v("解决方案")]),t._v("：在组件内部使用随机字符串绑定组件的"),e("code",[t._v("ref")]),t._v("或者"),e("code",[t._v("id")]),t._v("。")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("2、在父组件中改变"),e("code",[t._v("v-model")]),t._v("绑定的值，富文本内容不改变。")]),t._v(" "),e("p",[e("strong",[t._v("解决方案")]),t._v("：使用"),e("code",[t._v("watch")]),t._v("进行监听"),e("code",[t._v("value")]),t._v("变化，具体看代码实现。")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("3、每次调用"),e("code",[t._v("editor.txt.html()")]),t._v("方法，富文本中的光标就会出现在文末，导致在编辑富文本中间的内容时，出现鬼畜现象。")]),t._v(" "),e("p",[e("strong",[t._v("解决方案")]),t._v("：不要在"),e("code",[t._v("editor.customConfig.onchange()")]),t._v("中调用"),e("code",[t._v("editor.txt.html()")]),t._v("方法，而使用组件内部的一个"),e("code",[t._v("content")]),t._v("变量进行储存。然后"),e("code",[t._v("watch content")]),t._v("触发"),e("code",[t._v("input")]),t._v("事件，改变父组件的邦定值")]),t._v(" "),e("h2",{attrs:{id:"三、完整代码实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、完整代码实现"}},[t._v("#")]),t._v(" 三、完整代码实现")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<template>\n  <div>\n    <div :ref=\"toolId\" class=\"toolbar\"></div>\n    <div :ref=\"editorId\" class=\"text\"> \x3c!--可使用 min-height 实现编辑区域自动增加高度--\x3e\n    </div>\n  </div>\n</template>\n\n<script>\nimport wangEditor from 'wangeditor'\n\nexport default {\n  name: 'rich-text',\n  props: {\n    value: String\n  },\n  data() {\n    return {\n      content: '',\n      editor: {},\n      toolId: '',\n      editorId: ''\n    }\n  },\n  computed: {\n\n  },\n  watch: {\n    value(val) {\n      if (val) {\n        if (val !== this.content) {\n          this.setContent(val);\n        }\n      } else {\n        this.setContent('');\n      }\n    },\n\n    content(val) {\n      this.$emit('input', val);\n    }\n  },\n  mounted() {\n    this.toolId = this.randomString(12)\n    this.editorId = this.randomString(12)\n    this.content = this.value\n    this.$nextTick(() => {\n      this.editor = new wangEditor(this.$refs[this.toolId], this.$refs[this.editorId])\n      this.editor.customConfig.onchange = (html) => {\n        // 监控变化，同步更新到 textarea\n        this.content = html\n      }\n      //配置图片上传服务器接口\n      this.editor.customConfig.uploadImgServer = process.env.VUE_APP_BASE_API + '/file/upload/customizeDirUpload'\n      // 文件名\n      this.editor.customConfig.uploadFileName = 'file'\n      // 配置上传图片请求头部\n      // this.editor.customConfig.uploadImgHeaders = {}\n      // 上传图片钩子函数\n      this.editor.customConfig.uploadImgHooks = {\n        before: function(xhr, editor, files) {\n          // 图片上传之前触发\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，files 是选择的图片文件\n\n          // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n          // return {\n          //     prevent: true,\n          //     msg: '放弃上传'\n          // }\n        },\n        success: function(xhr, editor, result) {\n          // 图片上传并返回结果，图片插入成功之后触发\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果\n          // alert('成功')\n        },\n        fail: function(xhr, editor, result) {\n          // 图片上传并返回结果，但图片插入错误时触发\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象，result 是服务器端返回的结果\n        },\n        error: function(xhr, editor) {\n          // 图片上传出错时触发\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象\n        },\n        timeout: function(xhr, editor) {\n          // 图片上传超时时触发\n          // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象\n        },\n\n        // 如果服务器端返回的不是 {errno:0, data: [...]} 这种格式，可使用该配置\n        // （但是，服务器端返回的必须是一个 JSON 格式字符串！！！否则会报错）\n        customInsert: function(insertImg, result, editor) {\n          // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）\n          // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果\n\n          // 举例：假如上传图片成功后，服务器端返回的是 {url:'....'} 这种格式，即可这样插入图片：\n          var url = result.data\n          insertImg(url)\n\n          // result 必须是一个 JSON 格式字符串！！！否则报错\n        }\n      }\n      this.editor.create()\n      this.editor.txt.html(this.value)\n    })\n  },\n  methods: {\n    // 生成随机字符串id\n    randomString(len) {\n      len = len || 32\n      let $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678' /** **默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/\n      let maxPos = $chars.length\n      let pwd = ''\n      for (let i = 0; i < len; i++) {\n        pwd += $chars.charAt(Math.floor(Math.random() * maxPos))\n      }\n      return 'a' + pwd\n    },\n    setContent(val) {\n      this.editor.txt.html(val)\n    }\n  }\n}\n<\/script>\n\n<style scoped>\n  .toolbar {\n    border: 1px solid #ccc;\n  }\n  .text {\n    border: 1px solid #ccc;\n    min-height: 200px;\n  }\n</style>\n\n")])])]),e("h2",{attrs:{id:"四、使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、使用"}},[t._v("#")]),t._v(" 四、使用")]),t._v(" "),e("p",[e("code",[t._v("import")]),t._v("导入组件后，和使用输入框一样使用即可：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<rich-text v-model="html"></rich-text>\n')])])])])}),[],!1,null,null,null);n.default=o.exports}}]);