(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{458:function(n,t,e){"use strict";e.r(t);var a=e(11),s=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5011280-2e11233a7365cd82.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"Vue必学知识.png"}}),n._v("\n话不多说，源码地址： "),e("a",{attrs:{href:"https://github.com/Gitsifu/vue-learn",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://github.com/Gitsifu/vue-learn"),e("OutboundLink")],1)]),n._v(" "),e("p",[n._v("目录：\n1.v-bind的使用\n2.v-on和$emit()的使用\n3.$on()和$emit()的使用")]),n._v(" "),e("h2",{attrs:{id:"_1-v-bind使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-bind使用"}},[n._v("#")]),n._v(" 1."),e("code",[n._v("v-bind")]),n._v("使用:")]),n._v(" "),e("p",[n._v("子组件：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("<template>\n  <div>{{msg}}</div>\n</template>\n\n<script>\n  export default {\n    name: 'child',\n    components: {},\n    props: {\n      msg: {\n        require: false,//是否必须传入\n        type: String,//类型\n        default: ''//如果不传入时的默认值\n      }\n    },\n    data() {\n      return {}\n    },\n    methods: {},\n    mounted() {\n    }\n  }\n<\/script>\n\n<style scoped>\n</style>\n")])])]),e("p",[n._v("父组件：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('<template>\n  <div>\n    <h1>父组件传值给子组件demo：</h1>\n    <div>方式一：</div>\n    <child v-bind:msg="massage"></child>\n    <div>方式二：</div>\n    <child msg="2.这个是父组件的数据"></child>\n  </div>\n</template>\n\n<script>\n  import Child from "./child";\n\n  export default {\n    name: \'father\',\n    components: {Child},\n    props: [],\n    data() {\n      return {\n        massage: "1.这个是父组件的数据"\n      }\n    },\n    methods: {},\n    mounted() {\n    }\n  }\n<\/script>\n\n<style scoped>\n</style>\n')])])]),e("p",[n._v("效果图：\n"),e("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5011280-9d24fd5ccdae21b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})]),n._v(" "),e("h2",{attrs:{id:"_2-v-on与-emit-eventname-使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-v-on与-emit-eventname-使用"}},[n._v("#")]),n._v(" 2."),e("code",[n._v("v-on")]),n._v("与"),e("code",[n._v('$emit("eventName",...)')]),n._v("使用")]),n._v(" "),e("p",[n._v("子组件：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("<template>\n    <div>\n      <button v-on:click=\"test\">点我一下</button>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'child',\n        components: {},\n        props: [],\n        data() {\n            return {}\n        },\n        methods: {\n          test(){\n            //第一个参数是事件名称\n            this.$emit('event','这个是事件触发后发送的数据，v-on的回调函数参数接收');\n          }\n        },\n        mounted() {\n        }\n    }\n<\/script>\n\n<style scoped>\n</style>\n")])])]),e("p",[n._v("父组件：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("<template>\n  <div>\n    <child v-on:event=\"clickButton\"></child>\n    <div>{{msg}}</div>\n  </div>\n</template>\n\n<script>\n  import Child from \"./child\";\n\n  export default {\n    name: 'father',\n    components: {Child},\n    props: [],\n    data() {\n      return {\n        msg: '这个是原始数据'\n      }\n    },\n    methods: {\n      clickButton(data) {\n        this.msg = data;\n      }\n    },\n    mounted() {\n    }\n  }\n<\/script>\n\n<style scoped>\n</style>\n")])])]),e("p",[n._v("效果图：下载源码看效果吧。")]),n._v(" "),e("h2",{attrs:{id:"_3-on-和-emit-的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-on-和-emit-的使用"}},[n._v("#")]),n._v(" 3.$on()和$emit()的使用")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("<template>\n  <div>\n    <button v-on:click=\"clickFunc\">点击一下</button>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'on-emit',\n    components: {},\n    props: [],\n    data() {\n      return {}\n    },\n    methods: {\n      clickFunc() {\n        this.$emit('eventName', '这个是数据啦！！！')\n      }\n    },\n    //在创建时执行，并监听 ‘eventName’事件,$on这个方法监听本组件中的事件一般都都是写在created生命周期函数里\n    created() {\n      this.$on('eventName', function (data) {\n        alert('监听eventName事件收到了数据：\\n' + data)\n      })\n    },\n    mounted() {\n    }\n  }\n<\/script>\n\n<style scoped>\n</style>\n")])])]),e("p",[n._v("效果下载源码看。")]),n._v(" "),e("p",[e("strong",[n._v("解释")]),n._v("：")]),n._v(" "),e("p",[n._v("v-bind用于父组件传递数据给子组件。子组件通过props进行接收。props中的变量使用和data(){return{}}中的使用方式一样。")]),n._v(" "),e("p",[n._v("v-on与$emit：\nv-on用于监听子组件通过执行$emit触发的事件。")]),n._v(" "),e("p",[n._v("$on与$emit:\n$on用于监听"),e("strong",[n._v("自身")]),n._v("组件中执行$emit触发的事件。（$on监听一般写在created生命周期函数中）")])])}),[],!1,null,null,null);t.default=s.exports}}]);