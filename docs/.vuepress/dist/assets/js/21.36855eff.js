(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{455:function(n,e,t){"use strict";t.r(e);var r=t(11),a=Object(r.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("一般我们需要实现一个简单的跑马灯，我们可以使用"),t("code",[n._v("<marquee></marquee>")]),n._v("标签，但是会存在一个问题，轮播的时候并不是连续的，循环播放的时候中间有段时间会出现白色空白。\n"),t("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/5011280-0f3147d3565283f9.gif?imageMogr2/auto-orient/strip",alt:"image"}})]),n._v(" "),t("p",[n._v("那么有没有什么办法让循环播放的时候中途不出现空白呢？具体实现代码如下：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>跑马灯</title>\n    <style>\n      .wrapper{\n        overflow: hidden;\n        white-space: nowrap;\n        width: 500px;\n        border: solid 1px #000;\n      }\n      .content{\n        display: inline-block;\n      }\n    </style>\n</head>\n\n<body>\n  <div id="wrapper" class="wrapper" onmouseover="stopQu()" onmouseout="startQu()">\n   <div id="content"  class="content">\n       我是内容，可以是文字，也可以是图片，都行，但是注意此div中的内容加起来需要比滚动区域长\n   </div>\n   \x3c!-- 这个需要和上面的内容一样就可以了 --\x3e\n   <div class="content">\n      我是内容，可以是文字，也可以是图片，都行，但是注意此div中的内容加起来需要比滚动区域长\n   </div>\n  </div>\n  \n    <script>\n      //定时器id\n      var timer;\n      //页面加载完成之后执行\n      window.onload= init()\n      function init(){\n        console.log(document.getElementById("content").clientWidth)\n        var wrapper = document.getElementById("wrapper");\n        var content = document.getElementById("content");\n        var contentWidth = content.clientWidth;\n        timer = window.setInterval(function () {\n          wrapper.scrollLeft++;\n          console.log(wrapper.scrollLeft)\n          if (wrapper.scrollLeft >= contentWidth) {\n            wrapper.scrollLeft = 0;\n          }\n        }, 20)\n      }\n\n      //停止滚动\n      function stopQu(){\n        window.clearInterval(timer);\n      }\n\n      //重新滚动\n      function startQu(){\n        init();\n      }\n    <\/script>\n</body>\n</html>\n')])])]),t("p",[t("strong",[n._v("注意：滚动区域的内容需要比滚动区域的大小大")])]),n._v(" "),t("p",[n._v("以上是普通的html文件的写法，那如果是vue组件如何编写呢？在vue里面实现这个会有一个有关"),t("code",[n._v("$refs")]),n._v("的坑，"),t("strong",[n._v("巨坑！！！")]),n._v("，下面我们来写一下在vue里的实现，跳过这个坑。(ref相关的内容请自行查看vue官网)")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('<template>\n<div ref="wrapper" class="wrapper" @mouseenter="stopQu()" @mouseleave="startQu()">\n   <div ref="content"  class="content">\n       我是内容，可以是文字，也可以是图片，都行，但是注意此div中的内容加起来需要比滚动区域长\n   </div>\n   \x3c!-- 这个需要和上面的内容一样就可以了 --\x3e\n   <div class="content">\n      我是内容，可以是文字，也可以是图片，都行，但是注意此div中的内容加起来需要比滚动区域长\n   </div>\n</div>\n</template>\n<script>\n export default {\n    name: "marquee",\n    data(){\n      return {\n        timer: \'\'\n      }\n    },\n\n    mounted() {\n     /**\n      * 必须这样写！！！\n      * 原因是在mounted钩子函数中 console.log(this.$refs.wrapper) 结果为undifined,无法使用this.$refs\n      */\n      setTimeout(() => {\n        this.marquee()\n      }, 1000)\n    },\n\n    methods:{\n      marquee(){\n        let wrapper = this.$refs.wrapper;\n        let content = this.$refs.content;\n        let contentWidth = content.clientWidth;\n        this.timer = window.setInterval(function () {\n          wrapper.scrollLeft++;\n          if (wrapper.scrollLeft >= contentWidth) {\n            wrapper.scrollLeft = 0;\n          }\n        }, 20)\n      }\n\n      //停止滚动\n      stopQu(){\n        window.clearInterval(timer);\n      }\n\n      //重新滚动\n      startQu(){\n        this.marquee();\n      }\n    }\n  }\n<\/script>\n')])])]),t("p",[n._v("这个坑是在"),t("code",[n._v("mouted")]),n._v("钩子函数中不能立即去使用"),t("code",[n._v("this.$refs")]),n._v("，所以使用"),t("code",[n._v("setTimeout()")]),n._v("函数停顿一秒后执行，下面是具体的官方介绍，详情请自行查看vue官网。")]),n._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5011280-a7590d50ece3f352.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})]),n._v(" "),t("p",[t("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/5011280-4d78fa70cecc6485.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"image.png"}})])])}),[],!1,null,null,null);e.default=a.exports}}]);